# Generated by Django 4.1.5 on 2023-05-06 19:09

from django.db import migrations, models
import mainapp.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Адрес Почты')),
                ('username', models.CharField(db_index=True, max_length=25, verbose_name='Имя Пользователя')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Модератор')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активирован')),
                ('description', models.CharField(blank=True, max_length=150, verbose_name='Описание')),
                ('userpic', models.ImageField(blank=True, default='baseuserpic.jpg', upload_to=mainapp.utils.user_directory_path, verbose_name='Аватар')),
                ('date_joined', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата регистрации')),
                ('userslug', models.SlugField(max_length=150, unique=True, verbose_name='userslug')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
